name: .NET

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x

    - name: Build
      run: dotnet build WorkflowTest.Adder.UnitTests/WorkflowTest.Adder.UnitTests.csproj

    - name: Test
      run: dotnet test WorkflowTest.Adder.UnitTests/WorkflowTest.Adder.UnitTests.csproj --no-build /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura /p:CoverletOutput=TestResults/Coverage/

    - name: Generate Coverage Report
      uses: danielpalme/ReportGenerator-GitHub-Action@5.0.0
      with:
        reports: './WorkflowTest.Adder.UnitTests/TestResults/Coverage/coverage.cobertura.xml'
        targetdir: 'coveragereport'
        reporttypes: 'HtmlInline;Cobertura;MarkdownSummary;Badges'

    - name: Upload ReportGenerator report as artifact
      uses: actions/upload-artifact@v2
      with:
        name: ReportGenerator coverage report
        path: coveragereport/

    - name: copy coverage badge to .github
      run: |
        mkdir -p .github/badges
        cp coveragereport/badge_linecoverage.svg .github/badges/linecoverage_badge.svg
        cp coveragereport/badge_branchcoverage.svg .github/badges/branchcoverage_badge.svg

    - name: Store coverage badge in repo
      if: ${{ github.event_name == 'push' && github.ref_name == 'main' }}
      uses: EndBug/add-and-commit@v7
      with:
        add: .github/badges/*coverage_badge.svg

    # The next two steps are only for pull requests because the coverage summary only needs to be
    # written on a sticky comment in a pull request.

    - name: Publish coverage summary
      if: ${{ github.event_name == 'pull_request' }}
      uses: marocchino/sticky-pull-request-comment@v2
      with:
        path: coveragereport/ModifiedSummary.md
